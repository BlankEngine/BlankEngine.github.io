class BlankEngine{static Inner=class{static packageData=null;static buildData=null;static compiledData={libs:[],scripts:[],shaders:[],scenes:[]};static #a=class{#b=!1;#c=null;#d="";#e=[];#f=[];#g=null;get isLoaded(){return this.#b}get name(){return this.#c}get description(){return this.#d}get scripts(){return this.#f}#h=class{#b=!1;#g=null;#i=[];get isLoaded(){return this.#b}get src(){return this.#g}get classes(){return this.#i}constructor(s,t){null==s&&BlankEngine.Err(0),this.#g=s,this.#i=t??[]}async load(){if(this.#b)return;let s=document.createElement("script"),t=[];s.src=this.#g,s.type="text/javascript",s.async=!0,document.body.appendChild(s),await new Promise(t=>s.addEventListener("load",t));for(let a=0;a<this.#i.length;a++)null!=this.#i[a].name&&null!=this.#i[a].args&&(0==t.length?t[0]=this.#i[a]:t.push(this.#i[a]));this.#i=t,this.#b=!0}};constructor(s,t,a,i){null==i&&BlankEngine.Err(0),this.#c=s,this.#d=t,this.#e=a,this.#g=i}async load(){if(!this.#b){for(let s=0;s<this.#e.length;s++){if(null==this.#e[s])continue;let t=null;t=null!=this.#e[s].src?new this.#h(`../js/libs/${this.#g}/${this.#e[s].src}.js`,this.#e[s].classes):new this.#h(`../js/libs/${this.#g}/${this.#e[s]}.js`),0==this.#f.length?this.#f[0]=t:this.#f.push(t)}for(let a=0;a<this.#f.length;a++)await this.#f[a].load();this.#b=!0}}};static #h=class{#b=!1;#g=null;#i=[];get isLoaded(){return this.#b}get src(){return this.#g}get classes(){return this.#i}constructor(s,t){null==s&&BlankEngine.Err(0),this.#g=s,this.#i=t??[]}async load(){if(this.#b)return;let s=document.createElement("script"),t=[];s.src=this.#g,s.type="text/javascript",s.async=!0,document.body.appendChild(s),await new Promise(t=>s.addEventListener("load",t));for(let a=0;a<this.#i.length;a++)null!=this.#i[a].name&&null!=this.#i[a].args&&(0==t.length?t[0]=this.#i[a]:t.push(this.#i[a]));this.#i=t,this.#b=!0}};static initiateProgram(){document.body.style.height="100vh",document.body.style.margin="0",document.body.style.display="flex",document.body.style.alignItems="center",this.#j()}static async #j(){let s=await fetch("../package.json"),t=await fetch("../data/build.json");this.packageData=await s.json(),this.buildData=await t.json(),0==this.buildData.libs.length?this.buildData.libs[0]="BlankEngine.Core":this.buildData.libs.unshift("BlankEngine.Core");for(let a=0;a<this.buildData.libs.length;a++){if(null==this.buildData.libs[a])continue;let i=await fetch(`../js/libs/${this.buildData.libs[a]}/package.json`),e=await i.json(),l=new this.#a(e.name,e.description,e.scripts,this.buildData.libs[a]);0==this.compiledData.libs.length?this.compiledData.libs[0]=l:this.compiledData.libs.push(l)}for(let n=0;n<this.buildData.scripts.length;n++){if(null==this.buildData.scripts[n])continue;let c=null;c=null!=this.buildData.scripts[n].src?new this.#h(`../js/${this.buildData.scripts[n].src}.js`,this.buildData.scripts[n].classes):new this.#h(`../js/${this.buildData.scripts[n]}.js`),0==this.compiledData.scripts.length?this.compiledData.scripts[0]=c:this.compiledData.scripts.push(c)}for(let h=0;h<this.buildData.shaders.length;h++){let r=await fetch(`../shaders/${this.buildData.shaders[h]}.glsl`),d=await r.text();0==this.compiledData.shaders.length?this.compiledData.shaders[0]=d:this.compiledData.shaders.push(d)}for(let o=0;o<this.buildData.scenes.length;o++){let p=await fetch(`../data/scenes/${this.buildData.scenes[o]}.json`),u=await p.json(),g={name:u.name,resources:u.resources,gameObjects:u.gameObjects,buildIndex:o,path:`data/scenes/${this.buildData.scenes[o]}.json`};0==this.compiledData.scenes.length?this.compiledData.scenes[0]=g:this.compiledData.scenes.push(g)}this.#k()}static async #k(){for(let b=0;b<this.compiledData.libs.length;b++)await this.compiledData.libs[b].load();for(let D=0;D<this.compiledData.scripts.length;D++)await this.compiledData.scripts[D].load();Application.targetFrameRate=this.buildData.targetFrameRate,Window.data.title=this.packageData.window.title,Window.data.width=this.packageData.window.width??250,Window.data.height=this.packageData.window.height??250,Window.data.marginX=this.packageData.window.marginX??0,Window.data.marginY=this.packageData.window.marginY??0,Window.data.resizable=this.packageData.window.resizable??!0,Window.data.fillWindow=this.packageData.window.fillWindow??!0,Window.data.icon=this.packageData.window.icon??"",Window.init(),Shader.Set(this.compiledData.shaders),Resources.Set(this.buildData.resources),SceneManager.Set(this.compiledData.scenes),Input.init(),PlayerLoop.init()}};static Err(s,t){let a;switch(s){case 0:a="Value is unassigned or invalid";break;case 1:a="No instance to work with";break;case 2:a="Shader is invalid";break;case 3:a="Object cannot be found";break;case 4:a="Class used as component is not derived from class 'Component'"}throw null!=t&&(a+=`

Description: ${t}`),alert(a+=`

Error Code: ${s}`),Error(a)}}